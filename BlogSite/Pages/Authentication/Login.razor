@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using System.Text;
@page "/Login/{*RedirectTo}"
@implements IDisposable
@inject LoginManager LoginManager
@inject NavigationManager Navigation
@inject ProtectedLocalStorage LocalStorage
@inject ProtectedSessionStorage SessionStorage

<h1>Login</h1>
<EditForm Model="LoginData" OnValidSubmit="Submit">
	<DataAnnotationsValidator />
	<BetterInputText DisplayName="Username" AutoCompleteName="Username" @bind-Value="@LoginData.Username"/>
	<BetterInputText DisplayName="Password" AutoCompleteName="Password" @bind-Value="@LoginData.Password" type='password' />
	<BetterInputCheckbox DisplayName="Remember Me" @bind-Value="@LoginData.RememberMe"/>
	<p>New here? <a href="/Register">Register instead!</a></p>
	<button type="submit">Login</button>
	@ErrorMessage
</EditForm>

@code {
	LoginFormData LoginData { get; set; } = new();
	[Parameter]
	public string RedirectTo { get; set; } = "/";
	[CascadingParameter]
	public CascadingObject<User> CurrentUser { get; set; } = null!;

	public string ErrorMessage { get; set; } = "";

	protected override void OnParametersSet()
	{
		CurrentUser.ValueChanged += Redirect;
		Redirect(false);
	}

	protected override void OnInitialized()
	{
		Redirect(false);
	}

	protected override void OnAfterRender(bool firstRender)
	{
		Redirect(false);
	}

	void Redirect()
	{
		Redirect(true);
	}

	void Redirect(bool reloadIfNull)
	{
		if (CurrentUser.Value is not null)
			Navigation.NavigateTo(RedirectTo ?? "/");
		else if (reloadIfNull)
			Navigation.Reload();
	}

	async Task Submit(EditContext context)
	{
		ErrorMessage = "";
		// Login
		if (LoginManager.TryLogin(LoginData.Username, LoginData.Password, out User? value))
		{
			if (value is null)
			{
				ErrorMessage = "Incorrect password.";
			}
			else
			{
				CurrentUser.Value = value;

				string valueToStore = Encoding.UTF8.GetString(BitConverter.GetBytes(value.Id));
				valueToStore += "-" + PasswordHash.Hash(value.PasswordHash);
				if (LoginData.RememberMe)
					await LocalStorage.SetAsync("userinfo", valueToStore);

				await SessionStorage.SetAsync("userinfo", valueToStore);
				Redirect();
			}
		}
		else
		{
			ErrorMessage = "Incorrect username.";
		}
	}

	void IDisposable.Dispose()
	{
		CurrentUser.ValueChanged -= Redirect;
	}
}